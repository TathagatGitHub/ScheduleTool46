@model PreLogViewModel

<script language="javascript" type="text/javascript">    
    if ("@Model.EditPrelog.ToString().ToLower()" == "true") {
        function AddPreLogSubNote(preLogNoteId) {
            swal({
                html: "Enter comment to note: <input id='txtSubNote' autofocus class='form-control swal2-input'>",
                preConfirm: function (selectedOption) {
                    return new Promise(function (resolve, reject) {
                        if ($("#txtSubNote").val()) {
                            resolve({ value: document.getElementById('txtSubNote').value });
                        }
                        else {
                            reject("Please enter comment to note.");
                        }
                    });
                },
                onOpen: function () {
                    $("#txtSubNote").focus();
                }
            }).then(function (result) {
                SavePreLogSubNote(preLogNoteId, result.value);
            }).catch(swal.noop)
        }
        function SavePreLogSubNote(preLogNoteId, note) {
            $.ajax({
                url: "/Logs/AddPreLogSubNote",
                data: {
                    preLogNoteId: preLogNoteId,
                    note: note
                },
                cache: false,
                type: "POST",
                success: function (result) {
                    if (result.success == true) {
                        GetNotes();
                        var notify = $.notify(result.responseText, {
                            type: 'success',
                            allow_dismiss: true
                        });
                        $("#txtSubNote").val("");
                    }
                    else {
                        var notify = $.notify(result.responseText, {
                            type: 'danger',
                            allow_dismiss: true
                        });
                    }

                },
                error: function (response) {
                    var notify = $.notify(response.responseText, {
                        type: 'danger',
                        allow_dismiss: true
                    });
                }

            });
        }
        function SavePreLogNote(preLogId) {
            if ($("#txtNote").val() == "")
                return false;
            $.ajax({
                url: "/Logs/AddPreLogNote",
                data: {
                    note: $("#txtNote").val(),
                    preLogId: preLogId
                },
                cache: false,
                type: "POST",
                success: function (result) {
                    if (result.success == true) {
                        GetNotes();
                        var notify = $.notify(result.responseText, {
                            type: 'success',
                            allow_dismiss: true
                        });
                        $("#txtNote").val("");
                    }
                    else {
                        var notify = $.notify(result.responseText, {
                            type: 'danger',
                            allow_dismiss: true
                        });
                    }

                },
                error: function (response) {
                    var notify = $.notify(response.responseText, {
                        type: 'danger',
                        allow_dismiss: true
                    });
                }

            });
        }
        function PreLogGetPropertyDetails() {
            var markup = "";
            $("#divPropertyDetails tbody").html(markup);
            if (prelogviewtable.rows({ selected: true }).count() == 0) {
                swal("","Please select the network log line.","error");                
                return false;
            }            
            var _prelogLineIds = "";           
            $.each(prelogviewtable.rows({ selected: true }).data(), function (key, value) {
                if (key == 0) {
                    _prelogLineIds = value.preLogLineId;
                } else {
                    _prelogLineIds += "," + value.preLogLineId;
                }
            });
            $.ajax({
                url: "/Logs/PreLogGetPropertyDetails",
                data: { PreLogId: @Model.PreLog.PreLogId, PreLogLineIds: _prelogLineIds},
                type: "GET",
                success: function (result) {
                    if (result.success) {
                        $.each(result.result, function (key, value) {
                            markup += "<tr>";
                            markup += "<td class='d-none d-sm-table-cell'><input type='radio' name='pl' preloglineid=" + value.preLogLineId +"></td></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.propertyName + "</i></td>";
                            markup += (value.mon) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";
                            markup += (value.tue) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";
                            markup += (value.wed) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";
                            markup += (value.thu) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";
                            markup += (value.fri) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";
                            markup += (value.sat) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";
                            markup += (value.sun) ? "<td class='d-none d-sm-table-cell'><i class='fa fa-circle'></i></td>" : "<td class='d-none d-sm-table-cell'></td>";                            
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.startTime + "</i></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.endTime + "</i></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.dayPartCd + "</i></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.omdp + "</i></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.buyType + "</i></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.fullRate + "</i></td>";
                            markup += "<td class='d-none d-sm-table-cell'><i>" + value.imp + "</i></td>";
                            markup += "</tr>";
                        });
                        $("#divPropertyDetails tbody").html(markup);
                        $("#divPropertyDetails").modal("show");
                    }
                    else {                     
                        swal("Error!", result.responseText, "error");
                    }
            },
            error: function (response) {
                swal("Error!", error.responseText, "error");
            }
        });

        }
        function PreLogCopyProprtyDetails() {
            if ($("#tblPropertydetails tbody tr:has(input:checked) td").length == 0) {
                swal("","Please select the property that you would like to apply to this line.","error");
                return false;
            }
            var selectedRow = "<tr>";
            var headerRow = "<tr>";
            var _preLogLineId = "";
            $("#tblPropertydetails tbody tr:has(input:checked) td").each(function (key, value) {
                if (key == 0) {
                    _preLogLineId = $("input", this).attr("preloglineid");
                }
                else if (key > 0) {
                    selectedRow += "<td>" + $(this).html() + "</td>";
                }
            });
            selectedRow += "</tr>";
            $("#tblPropertydetails thead tr th").each(function (key, value) {
                if (key > 0) {
                    headerRow += "<th>"+$(this).html()+"</th>";
                }
            });
            headerRow += "</tr>";
            var _prelogLineIds = "";
            $.each(prelogviewtable.rows({ selected: true }).data(), function (key, value) {
                if (key == 0) {
                    _prelogLineIds = value.preLogLineId;
                } else {
                    _prelogLineIds += "," + value.preLogLineId;
                }
            });
            swal({
                title: "",
                html: "Please confirm this property is the property you would like to apply to this line."+
                    "<table class='table table-bordered table-vcenter js-dataTable-simple'><thead>" + headerRow + "</thead>" + "<tbody>" + selectedRow + "</tbody></table>" ,
                type: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes",
                width: 1500,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        setTimeout(function () {
                            resolve();
                        }, 50);
                    });
                }
            }).then(
                function (result) {
                    $.ajax({
                        url: "/Logs/PreLogCopyPropertyDetails",
                        type: "POST",
                        data: {
                            PreLogId: @Model.PreLog.PreLogId,
                            preLogLineId: _preLogLineId,
                            PreLogLineIds: _prelogLineIds
                        },
                        success: function (result) {
                            if (result.success) {
                                swal("", result.responseText, "success");
                                $("#divPropertyDetails").modal("hide");
                                prelogviewtable.ajax.reload(null, false);
                            }
                            else {
                                swal("Error!", result.responseText, "error");
                            }

                        },
                        error: function (response) {
                            swal("Error!", response.responseText, "error");
                        }
                    })
                });

        }
        
        var selectedRowFrom = "";
        var selectedRowTo="";
        var selectedRowCountFrom=0;
        var selectedRowCountTo=0;  
        var selectedPreLogLineIdsFrom="";
        var selectedPreLogLineIdsTo="";
         
        function PreLogMoveSpotData() 
        {             
            var errorMsg = "";
            if (prelogviewtable.rows({ selected: true }).data().count() > 0) 
            {
                if (selectedRowFrom == "") {
                    errorMsg = "";
                    selectedRowFromCount = prelogviewtable.rows({ selected: true }).data().count();
                    $.each(prelogviewtable.rows({ selected: true }).data(), function (key, value) 
                    {
                        if ((value.spotDate == null || value.spotDate == '') && (value.spotTime == null || value.spotTime == '')
                            && (value.isci == null || value.isci == '') && (value.programTitle == null || value.programTitle == "")) 
                        {
                            errorMsg = "Selected line has blank spot data.";
                            return false;
                        }
                        if (key == 0) { selectedPreLogLineIdsFrom = value.preLogLineId; } else { selectedPreLogLineIdsFrom += "," + value.preLogLineId; }
                        var spotDate = ""; var spotTime = ""; var isci = ""; var programTitle = "";
                        if (value.spotDate != null) { spotDate = moment(value.spotDate).format("MM/DD/YYYY"); }
                        if (value.spotTime != null) { spotTime = value.spotTime; }
                        if (value.isci != null) { isci = value.isci; }
                        if (value.programTitle != null) { programTitle = value.programTitle; }
                        selectedRowFrom += "<tr><td>" + value.stdNetName + "</td><td>" + value.propertyName + "</td><td>" + spotDate + "</td><td>" + spotTime + "</td><td>" + isci + "</td><td>" + programTitle + "</td></tr>"
                    });
                    if (errorMsg != "") 
                    {
                        selectedRowFrom = "";
                        swal("", errorMsg, "error");
                        return false;
                    }
                } else if (selectedRowTo == "") 
                {
                    errorMsg = "";
                    selectedRowToCount = prelogviewtable.rows({ selected: true }).data().count();
                    if (selectedRowFromCount != selectedRowToCount) {
                        selectedRowTo = "";
                        swal("", "Please select equal no. of lines.", "error");
                        return false;
                    }
                    $.each(prelogviewtable.rows({ selected: true }).data(), function (key, value) 
                    {
                        if ((value.spotDate != null && value.spotDate != '') || (value.spotTime != null && value.spotTime != '') || (value.isci != null && value.isci != '') || (value.programTitle != null && value.programTitle != "")) 
                        {
                            errorMsg = "Selected line has spot data.";
                            return false;
                        }
                        if (key == 0) { selectedPreLogLineIdsTo = value.preLogLineId; } else { selectedPreLogLineIdsTo += "," + value.preLogLineId; }
                        var spotDate = ""; var spotTime = ""; var isci = ""; var programTitle = "";
                        if (value.spotDate != null) { spotDate = moment(value.spotDate).format("MM/DD/YYYY");}
                        if (value.spotTime != null) { spotTime = value.spotTime; }
                        if (value.isci != null) { isci = value.isci; }
                        if (value.programTitle != null) { programTitle = value.programTitle; }
                        selectedRowTo += "<tr><td>" + value.stdNetName + "</td><td>" + value.propertyName + "</td><td>" + spotDate + "</td><td>" + spotTime + "</td><td>" + isci + "</td><td>" + programTitle + "</td></tr>"
                    });
                    if (errorMsg != "") {
                        selectedRowTo = "";
                        swal("", errorMsg, "error");
                        return false;
                    }
                }
            }
            var markup = "";
            if (selectedRowFrom != "") {
                if (selectedRowTo == "") {
                    markup = "<div style='font-weight:bold;'>Following lines Spot Data available for paste. </div>";
                }
                markup += "<div style='font-weight:bold;'>Please confirm selected lines. </div>" +
                    "<div style='text-align:left; font-weight:bold;'>Move From:</div><br/><table class='table table-bordered table-vcenter js-dataTable-simple'><thead><th>NETWORK</th><th>PROPERTY</th>" +
                    "<th>Spot Date</th><th>Spot Time</th><th>ISCI</th><th>Program</th></thead>" +
                    "<tbody>" + selectedRowFrom + "</tbody></table>";
            }
            if (selectedRowTo != "") {
                markup += "<div style='text-align:left; font-weight:bold;'>Move To:</div><br /><table class='table table-bordered table-vcenter js-dataTable-simple'><thead><th>NETWORK</th><th>PROPERTY</th>" +
                    "<th>Spot Date</th><th>Spot Time</th><th>ISCI</th><th>Program</th></thead>" +
                    "<tbody>" + selectedRowTo + "</tbody></table>";
            }
            swal({
                title: "",
                html: markup,
                type: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes",
                width: 1200,
                preConfirm: function () {
                    return new Promise(function (resolve) {
                        setTimeout(function () {
                            resolve();
                        }, 50);
                    });
                }
            }).then(
                function () {
                    if (selectedRowFrom != "" && selectedRowTo != "") {
                        $.ajax({
                            url: "/Logs/PreLogMoveSpotData",
                            type: "POST",
                            data: {
                                PreLogId: @Model.PreLog.PreLogId,
                                PreLogLineIdsFrom: selectedPreLogLineIdsFrom,
                                PreLogLineIdsTo: selectedPreLogLineIdsTo
                            },
                            success: function (result) {
                                if (result.success) {
                                    ResetVariable();
                                    swal("", result.responseText, "success");
                                    prelogviewtable.ajax.reload(null, false);
                                }
                                else {
                                    swal("Error!", result.responseText, "error");
                                }
                            },
                            error: function (response) {
                                swal("Error!", response.responseText, "error");
                            }
                        })
                    }

                    prelogviewtable.rows({ selected: true }).deselect();
                }).catch(function () {
                    ResetVariable();
                    prelogviewtable.rows({ selected: true }).deselect();
                });
                }
        function ResetVariable() {
    selectedRowFrom = "";
    selectedRowTo = "";
    selectedRowFromCount = 0;
    selectedRowToCount = 0;
    selectedPostLogLineIdsFrom = "";
    selectedPostLogLineIdsTo = "";
}   
    }
   

    function GetNotes() {
        $.ajax({
            url: "/Logs/GetNotes",
            data: { prelogid: @Model.PreLog.PreLogId },
            type: "GET",
            success: function (result) {
                var markup = "";
                $.each(result, function (key, value) {
                    var preLogNoteId = value.preLogNoteId;
                    if (value.parentNoteId == null) {

                        markup += "<tr>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + moment(value.createDt).format("MM/DD/YYYY HH:mm:ss") + "</td>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + value.displayName + "</td>";
                        markup += "<td class='font-w600 bg-secondary-light'>" + value.note + "</td>";
                        markup += "<td class='d-none d-sm-table-cell text-center bg-secondary-light'>";
                        if ("@Model.EditPrelog.ToString().ToLower()" == "true") {
                            markup += "<button type='button' class='btn btn-sm btn-alt-secondary' id='btnAdd-" + preLogNoteId + "' name='btnAdd-" + preLogNoteId + "' onclick='javascript: AddPreLogSubNote(" + preLogNoteId + ");'>Add</button>";
                        };
                        markup += "</td>";
                        markup += "</tr>";
                    }
                    else {
                        markup += "<tr>";
                        markup += "<td class='d-none d-sm-table-cell'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>" + moment(value.createDt).format("MM/DD/YYYY  HH:mm:ss") + "</i></td>";
                        markup += "<td class='d-none d-sm-table-cell'><i>" + value.displayName + "</i></td>";
                        markup += "<td class='font-w600'><i>" + value.note + "</i></td>";
                        markup += "<td class='d-none d-sm-table-cell text-center'></td>";
                        markup += "</tr>";
                    }
                });
                $("#modal-notes").find('#tblNotes tbody').html(markup);
                //$('#modal-notes').modal({
                //    draggable: true
                //}, 'show');
            },
            error: function (response) {
                swal('Error!', error.responseText, 'warning');
            }
        });
    }

      function GetValidISCIs() {
        $.ajax({
            url: "/Logs/GetValidISCIs",
            data: { preLogId: @Model.PreLog.PreLogId },
            type: "GET",
            success: function (result) {
                var markup = "";
                $.each(result, function (key, value) {
                        markup += "<tr>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + value.isci +"</td>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + moment(value.dateStart).format("MM/DD/YYYY") + "</td>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + moment(value.dateEnd).format("MM/DD/YYYY") + "</td>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + value.length + "</td>";
                        markup += "<td class='d-none d-sm-table-cell bg-secondary-light'>" + value.mediaType + "</td>";
                        markup += "</td>";
                        markup += "</tr>";
                });
                markup = (markup == "") ? "<tr><td colspan='5' style='text-align:center'>No ISCI's in Master Traffic List for this given week. Please contact traffic for more details.</tr></td>" : markup;
                $("#divValidISCIs").find('#tblValidISCIs tbody').html(markup);
            },
            error: function (response) {
                swal('Error!', error.responseText, 'warning');
            }
        });
    }


    function PreLogClearSpotData() {

        if (prelogviewtable.rows({ selected: true }).data().count() == 0)
        {
                swal("", "Please select the lines that you would like to clear spot data.", "error");
                return false;
        }

        var _prelogLineIds = "";
        $.each(prelogviewtable.rows({ selected: true }).data(), function (key, value) {
            if (key == 0) {
                _prelogLineIds = value.preLogLineId;
            } else {
                _prelogLineIds += "," + value.preLogLineId;
            }
        });
        swal({
            title: "",
            html: "Please confirm to clear spot data to the selected line(s).",
            type: "question",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes",
            width: 550,
            preConfirm: function () {
                return new Promise(function (resolve) {
                    setTimeout(function () {
                        resolve();
                    }, 50);
                });
            }
        }).then(
            function (result) {
                $.ajax({
                    url: "/Logs/PreLogClearSpotData",
                    type: "POST",
                    data: {
                        PreLogId: @Model.PreLog.PreLogId,
                        PreLogLineIds: _prelogLineIds                            
                    },
                    success: function (result) {
                        if (result.success) {
                            swal("", result.responseText, "success");
                            $("#divPropertyDetails").modal("hide");
                            prelogviewtable.ajax.reload(null, false);
                        }
                        else {
                            swal("Error!", result.responseText, "error");
                        }

                    },
                    error: function (response) {
                        swal("Error!", response.responseText, "error");
                    }
                })
            });

        }
</script>

<div class="row">
    <div class="col-12">
        <div class="btn-group btn-group" role="group" aria-label="btnGroupDataTable">
            <div id="divNotes"
                 title="Notes"
                 data-toggle="popover"
                 data-original-title="Notes"
                 data-placement="top">
                <button tooltip="Notes" onclick="GetNotes();"
                        class="btn btn-success"
                        aria-describedby="popover880418"
                        type="button"
                        data-toggle="modal"
                        data-target="#modal-notes">
                    <i class="fa fa-comments-o mr-5"></i>
                </button>
            </div>
            @if (Model.EditPrelog)
            {
                <div id="divColumns"
                     title="Column Visibility"
                     data-toggle="popover"
                     data-original-title="Column Visibility"
                     data-placement="top"
                     data-content="Show/Hide Columns">
                    <button tooltip="Show Columns"
                            class="btn btn-success"
                            id="btnPropShowColumns">
                        <i class="fa fa-columns mr-5"></i>
                    </button>
                </div>
                <div id="divColumnsReset"
                     title="Reset Table State"
                     data-toggle="popover"
                     data-original-title="Reset Table State"
                     data-placement="top"
                     data-content="This will reset saved state of columns back to default settings.">
                    <button tooltip="Reset Columns"
                            class="btn btn-success"
                            id="btnPropResetColumns">
                        <i class="si si-ban mr-5"></i>
                    </button>
                </div>
                <div id="divFilterReset"
                     title="Reset Filters"
                     data-toggle="popover"
                     data-original-title="Reset Filters"
                     data-placement="top"
                     data-content="This will reset filters back to show all rows.">
                    <button tooltip="Reset Filters"
                            class="btn btn-success"
                            id="btnPropResetFilters">
                        <i class="fa fa-filter mr-5"></i>
                    </button>
                </div>
                <div id="divResetState"
                     title="Refresh Table"
                     data-toggle="popover"
                     data-original-title="Refresh Table"
                     data-placement="top"
                     data-content="Refresh table only not the entire page.">
                    <button type="button"
                            id="btnReload"
                            tooltip="Reload data"
                            class="btn btn-success">
                        <i class="fa fa-refresh mr-5"></i>
                    </button>
                </div>
            }


        <div style="margin-left:15px">

            @*@Html.ActionLink("EXPORT LOG", "ExportToExcel", new { prelogid = @Model.PreLog.PreLogId })*@
            @*<button tooltip="Export Log" style="margin-left:20px; background-color:gainsboro" id="btnExportSubmit"
                class="btn btn-default"
                aria-describedby="popover880418"
                type="button">
            EXPORT LOG
        </button>*@
            @if (Model.EditPrelog)
            {
                <button tooltip="Summary" style="margin-left:5px; background-color:gainsboro" id="btnSummary"
                        class="btn btn-default"
                        aria-describedby="popover880418"
                        type="button">
                    SUMMARY
                </button>
            }
            <button tooltip="Export Log" style="margin-left:5px; background-color:gainsboro" id="btnExportAllSubmit"
                    class="btn btn-default"
                    aria-describedby="popover880418"
                    type="button">
                EXPORT LOG
            </button>

            <button tooltip="View Valid ISCI" style="margin-left:5px; background-color:gainsboro" id="btnViewValidISCI" data-toggle="modal"
                    data-target="#divValidISCIs" onclick="GetValidISCIs();"
                    class="btn btn-default"
                    type="button">
                View Valid ISCI
            </button>
            @if (Model.EditPrelog)
            {
                <button tooltip="Copy Property Details" style="margin-left:5px; background-color:gainsboro" id="btnCopyPropertyDetails"
                        onclick="PreLogGetPropertyDetails();"
                        class="btn btn-default"
                        type="button">
                    Copy Property Details
                </button>

                <button tooltip="Clear Spot Data" style="margin-left:5px; background-color:gainsboro" id="btnPrelogClearSpotData"
                        onclick="PreLogClearSpotData();"
                        class="btn btn-default"
                        type="button">
                    Clear Spot Data
                </button>

                <button tooltip="PreLog Move Spot Data" style="margin-left:5px; background-color:gainsboro" id="btnPreLogMoveSpotData"
                        onclick="PreLogMoveSpotData();"
                        class="btn btn-default"
                        disabled="disabled"
                        type="button">
                        Move Spot Data
                </button>               

            }
        </div>            

        </div>
    </div>
</div>
<br />

<div class="btn-group btn-group" role="group" id="divColumnVisibility" name="divColumnVisibility" aria-label="btnGroup4" style="display:none">
    <table class="table-borderless display compact nowrap">
        <tr>
            <td colspan="1" align="left">
                <button class="btn btn-secondary" id="ShowHideButton1" onclick="ShowHideColumn(1, this);">Network</button>
                <button class="btn btn-secondary" id="ShowHideButto2" onclick="ShowHideColumn(2, this);">Property</button>
                <button class="btn btn-secondary" id="ShowHideButton3" onclick="ShowHideColumn(3, this);">M</button>
                <button class="btn btn-secondary" id="ShowHideButton4" onclick="ShowHideColumn(4, this);">T</button>
                <button class="btn btn-secondary" id="ShowHideButton5" onclick="ShowHideColumn(5, this);">W</button>
                <button class="btn btn-secondary" id="ShowHideButton6" onclick="ShowHideColumn(6, this);">Th</button>
                <button class="btn btn-secondary" id="ShowHideButton7" onclick="ShowHideColumn(7, this);">F</button>
                <button class="btn btn-secondary" id="ShowHideButton8" onclick="ShowHideColumn(8, this);">Sa</button>
                <button class="btn btn-secondary" id="ShowHideButton9" onclick="ShowHideColumn(9, this);">Su</button>
                <button class="btn btn-secondary" id="ShowHideButton10" onclick="ShowHideColumn(10, this);">Start Time</button>
                <button class="btn btn-secondary" id="ShowHideButton11" onclick="ShowHideColumn(11, this);">End Time</button>
                <button class="btn btn-secondary" id="ShowHideButton12" onclick="ShowHideColumn(12, this);">DP</button>
                <button class="btn btn-secondary" id="ShowHideButton13" onclick="ShowHideColumn(13, this);">OMDP</button>
                <button class="btn btn-secondary" id="ShowHideButton14" onclick="ShowHideColumn(14, this);">Len</button>
                <button class="btn btn-secondary" id="ShowHideButton15" onclick="ShowHideColumn(15, this);">Buy Type</button>
                <button class="btn btn-secondary" id="ShowHideButton16" onclick="ShowHideColumn(16, this);">SP Buy</button>
                <button class="btn btn-secondary" id="ShowHideButton17" onclick="ShowHideColumn(17, this);">Full Rate</button>
                <button class="btn btn-secondary" id="ShowHideButton18" onclick="ShowHideColumn(18, this);">Rate</button>
                @if (Model.CountryId == 2)
                {
                    <button class="btn btn-secondary" id="ShowHideButton19" onclick="ShowHideColumn(19, this);">USD GROSS RATE</button>
                }
                <button class="btn btn-secondary" id="ShowHideButton20" onclick="ShowHideColumn(20, this);">IMP</button>
                <button class="btn btn-secondary" id="ShowHideButton21" onclick="ShowHideColumn(21, this);">CPM</button>
                <button class="btn btn-secondary" id="ShowHideButton22" onclick="ShowHideColumn(22, this);">Spot Date</button>
                <button class="btn btn-secondary" id="ShowHideButton23" onclick="ShowHideColumn(23, this);">Spot Time</button>
                <button class="btn btn-secondary" id="ShowHideButton24" onclick="ShowHideColumn(24, this);">Media Type</button>
                <button class="btn btn-secondary" id="ShowHideButton25" onclick="ShowHideColumn(25, this);">ISCI</button>
                <button class="btn btn-secondary" id="ShowHideButton26" onclick="ShowHideColumn(26, this);">Program</button>
                <button class="btn btn-secondary" id="ShowHideButton27" onclick="ShowHideColumn(27, this);">Cleared</button>
                <button class="btn btn-secondary" id="ShowHideButton28" onclick="ShowHideColumn(28, this);">Daypart</button>
                <button class="btn btn-secondary" id="ShowHideButton29" onclick="ShowHideColumn(29, this);">Comm. Rate</button>
                @if (Model.CountryId == 2)
                {
                    <button class="btn btn-secondary" id="ShowHideButton30" onclick="ShowHideColumn(30, this);">CA CONV. RATE</button>
                }
                </td>
        </tr>

    </table>
</div>

<div class="modal hide fade" id="modal-notes" role="dialog" aria-labelledby="modal-notes" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="block block-themed block-transparent mb-0">
                <div class="block-header bg-primary-dark">
                    <h3 class="block-title">PRE LOG FOR @Model.ScheduleName</h3>
                    <div class="block-options">
                        <button type="button" class="btn-block-option" data-dismiss="modal" aria-label="Close">
                            <i class="si si-close"></i>
                        </button>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        @if (Model.EditPrelog)
                        {
                            <label class="col-12" for="txtNote">Add Note:</label>
                            <div class="col-md-12">
                                <input type="text" class="form-control" id="txtNote" name="txtNote">
                            </div>
                        }
                    </div>

                    <div class="form-group row">
                        <div class="block-content block-content-full">
                            <table class="table table-bordered table-vcenter js-dataTable-simple" id="tblNotes" name="tblNotes">
                                <thead>
                                    <tr>
                                        <th class="d-none d-sm-table-cell" style="width:20%">Date</th>
                                        <th class="d-none d-sm-table-cell" style="width:15%">Creator</th>
                                        <th class="d-none d-sm-table-cell" style="width:60%">Note</th>
                                        <th class="d-none d-sm-table-cell"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-alt-secondary" data-dismiss="modal">Close</button>
                @if (Model.EditPrelog)
                {
                    <button type="button" class="btn btn-alt-success" onclick="javascript:SavePreLogNote(@Model.PrelogId);">
                        <i class="fa fa-check"></i> Save
                    </button>
                }
            </div>
        </div>
    </div>
</div>


<div class="modal hide fade" id="divValidISCIs" role="dialog" aria-labelledby="divValidISCIs" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="block block-themed block-transparent mb-0">
                <div class="block-header bg-primary-dark">
                    <h3 class="block-title">Valid ISCIs</h3>
                    <div class="block-options">
                        <button type="button" class="btn-block-option" data-dismiss="modal" aria-label="Close">
                            <i class="si si-close"></i>
                        </button>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <div class="block-content block-content-full">
                            <table class="table table-bordered table-vcenter js-dataTable-simple" id="tblValidISCIs" name="tblValidISCIs">
                                <thead>
                                    <tr>
                                        <th class="d-none d-sm-table-cell" style="width:25%">ISCI</th>
                                        <th class="d-none d-sm-table-cell" style="width:15%">Date Start</th>
                                        <th class="d-none d-sm-table-cell" style="width:15%">Date End</th>
                                        <th class="d-none d-sm-table-cell" style="width:15%">Length</th>
                                        <th class="d-none d-sm-table-cell" style="width:25%">Media Type</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-alt-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal hide fade" id="divPropertyDetails" role="dialog" aria-labelledby="divPropertyDetails" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="block block-themed block-transparent mb-0">
                <div class="block-header bg-primary-dark">
                    <h3 class="block-title">Copy Property Details</h3>
                    <div class="block-options">
                        <button type="button" class="btn-block-option" data-dismiss="modal" aria-label="Close">
                            <i class="si si-close"></i>
                        </button>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <div class="block-content block-content-full">
                            <table class="table table-bordered table-vcenter js-dataTable-simple" id="tblPropertydetails" name="tblPropertydetails">
                                <thead>
                                    <tr>
                                        <th class="d-none d-sm-table-cell" style="width:1%"></th>
                                        <th class="d-none d-sm-table-cell" style="width:15%">Property</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">M</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">T</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">W</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">T</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">F</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">Sa</th>
                                        <th class="d-none d-sm-table-cell" style="width:3%">Su</th>
                                        <th class="d-none d-sm-table-cell" style="width:10%">START TIME</th>
                                        <th class="d-none d-sm-table-cell" style="width:10%">END TIME</th>
                                        <th class="d-none d-sm-table-cell" style="width:5%">DP</th>
                                        <th class="d-none d-sm-table-cell" style="width:5%">OMDP</th>
                                        <th class="d-none d-sm-table-cell" style="width:5%">BUY TYPE</th>
                                        <th class="d-none d-sm-table-cell" style="width:14%">FULL RATE</th>
                                        <th class="d-none d-sm-table-cell" style="width:14%">IMP</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-alt-secondary" onclick="PreLogCopyProprtyDetails()">Copy Property Details</button>
                <button type="button" class="btn btn-alt-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>