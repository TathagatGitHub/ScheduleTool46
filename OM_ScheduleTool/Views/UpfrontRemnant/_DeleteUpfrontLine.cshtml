@model ViewUpfrontsViewModel

<style>
    #dTable {
        width: 1400px;
        height: 700px;
        overflow-y: auto;
        text-align: justify;
    }

    table {
        text-align: left;
        position: relative;
    }

    th {
        background: white;
        position: sticky;
        top: 0;
    }

    th {
        background: #C3C2C2;
    }
</style>

<script language="javascript" type="text/javascript">
    var deleteResult = null;

    function formatTime(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? 'PM' : 'AM';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var strTime = hours + ':' + minutes + ' ' + ampm;
        return strTime;
    }

    function PopulateDelete(_UpfrontLineId) {
        $.ajax({
            url: "/UpfrontRemnant/GetUpfrontRemnantDeleteLines",
            data: {
                UpfrontLineId: _UpfrontLineId
            },
            cache: false,
            type: "POST",
            success: function (result) {
                deleteResult = result;
                var markup = "";
                var approved = 0
                var inuse = 0;
                var _30deleteCount = 0;
                for (var x = 0; x < result.length; x++) {
                    markup += "<tr>";
                    markup += '<td class="d-none d-sm-table-cell text-center">' + result[x].demoName + '</td>';
                    markup += '<td class="d-none d-sm-table-cell text-center">' + result[x].propertyName + '</td>';
                    markup += '<td class="d-none d-sm-table-cell text-center">' + formatTime(new Date(result[x].startTime)) + '</td>';
                    markup += '<td class="d-none d-sm-table-cell text-center">' + formatTime(new Date(result[x].endTime)) + '</td>';
                    markup += '<td class="d-none d-sm-table-cell text-center">' + result[x].dayPartCd + '</td>';
                    markup += '<td class="d-none d-sm-table-cell text-center">' + result[x].buyTypeCode + '</td>';
                    if (result[x].splitNo == 1) {
                        markup += '<td class="d-none d-sm-table-cell text-center">' + 0 + '</td>';
                    }
                    else if (result[x].splitNo == 2) {
                        markup += '<td class="d-none d-sm-table-cell text-center">' + 1 + '</td>';
                    }
                    else {
                        markup += '<td class="d-none d-sm-table-cell text-center">' + 2 + '</td>';
                    }

                    if (result[x].spotLen == 15) {
                        markup += '<td class="d-none d-sm-table-cell text-center"><span class="badge badge-pill badge-warning">' + result[x].spotLen + '</span></td>';
                    }
                    if (result[x].spotLen == 30) {
                        markup += '<td class="d-none d-sm-table-cell text-center"><span class="badge badge-pill badge-success">' + result[x].spotLen + '</span></td>';
                    }
                    if (result[x].spotLen == 60) {
                        markup += '<td class="d-none d-sm-table-cell text-center"><span class="badge badge-pill badge-primary">' + result[x].spotLen + '</span></td>';
                    }
                    if (result[x].spotLen == 120) {
                        markup += '<td class="d-none d-sm-table-cell text-center"><span class="badge badge-pill badge-danger">' + result[x].spotLen + '</span></td>';
                    }

                    if (result[x].rateAmt == 0) {
                        markup += '<td class="d-none d-sm-table-cell text-center">--'  + '</td>';
                    }
                    else {
                        markup += '<td class="d-none d-sm-table-cell text-center">$' + (result[x].rateAmt).toLocaleString("en-US", { maximumFractionDigits: 2, minimumFractionDigits: 2 }); + '</td>';
                    }
                    markup += '<td class="d-none d-sm-table-cell text-center">' + result[x].impressions + '</td>';
                    markup += '<td class="d-none d-sm-table-cell text-center">' + result[x].doNotBuyTypeDescription + '</td>';

                    if (result[x].deleteFlag == 'DELETE') {
                        markup += '<td class="d-none d-sm-table-cell text-center text-success">';
                        //markup += '<i class="fa fa-check-circle-o"></i> OK TO DELETE';
                        markup += '<i class="fa fa-check-circle-o"></i> OK TO DELETE';
                        markup += '</td>';
                    }
                    else {
                        markup += '<td class="d-none d-sm-table-cell text-center text-danger">';
                        //markup += '<i class="fa fa-check-circle-o"></i> OK TO DELETE';
                        markup += '<i class="fa fa-times-circle-o"></i>' + ' ' + result[x].deleteFlag;
                        markup += '</td>';
                    }

                    if (result[x].spotLen == 30 && result[x].buyTypeCode != 'A' && result[x].deleteFlag == 'DELETE') {
                        _30deleteCount++;
                    }

                    //markup += '<td style="visibility:collapse;" width:"0px"; >' + result[x].upfrontLineId + '</td>';
                    //markup += '<td style="display:none;" class="d-none d-sm-table-cell text-center">$' + result[x].UpfrontLineId + '</td>';
                    //if (result[x].approved == true && result[x].inUse == true) {
                    //    markup += '<td class="d-none d-sm-table-cell text-center text-danger">';
                    //    markup += '<i class="fa fa-times-circle-o"></i> APPROVED, IN USE';
                    //    markup += '</td>';
                    //    approved = 1;
                    //    inuse = 1;
                    //}
                    //else if (result[x].approved == true && result[x].inUse == false) {
                    //    markup += '<td class="d-none d-sm-table-cell text-center text-danger">';
                    //    markup += '<i class="fa fa-times-circle-o"></i> APPROVED';
                    //    markup += '</td>';
                    //    approved = 1;
                    //}
                    //else if (result[x].approved == false && result[x].inUse == true) {
                    //    markup += '<td class="d-none d-sm-table-cell text-center text-danger">';
                    //    markup += '<i class="fa fa-times-circle-o"></i> IN USE';
                    //    markup += '</td>';
                    //    inuse = 1;
                    //}
                    //else if (result[x].inUse == false && result[x].approved == false) {
                    //    markup += '<td class="d-none d-sm-table-cell text-center text-success">';
                    //    markup += '<i class="fa fa-check-circle-o"></i> OK TO DELETE';
                    //    markup += '</td>';
                    //}
                    markup += "</tr>";
                }
                $("#DeleteList").html(markup).show();

                //if (approved === 0 && inuse === 0) {
                if (_30deleteCount > 0) {
                    $('#btnDeleteProperty').removeAttr('style');
                }
                else {
                    $('#btnDeleteProperty').attr('style', 'display:none;');
                }

            },
            error: function (response) {
                var notify = $.notify(response.responseText, {
                    type: 'danger',
                    allow_dismiss: true
                });
            }

        });
    }

    function DeleteProperty(_UpfrontLineId) {
        var ulist = [];
        for (var x = 0; x < deleteResult.length; x++) {
            if (deleteResult[x].spotLen == 30 && deleteResult[x].deleteFlag == 'DELETE') {
                ulist.push(deleteResult[x].upfrontLineId);
            }
        }

        deleteResult = null;
        _UpfrontLineId = ulist;

        $.ajax({
            url: "/UpfrontRemnant/DeleteProperty",
            data: {
                UpfrontLineId: _UpfrontLineId
            },
            cache: false,
            type: "POST",
            success: function (result) {
                $("#modal-deleteupfrontline").modal('toggle');
                //$("#btnDelete").attr("disabled", "disabled");

                if (result.success == true) {
                    swal({
                        title: 'Success',
                        text: result.responseText,
                        type: 'success',
                        showCancelButton: false,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'OK',
                        preConfirm: function () {
                            return new Promise(function (resolve) {
                                setTimeout(function () {
                                    resolve();
                                }, 50);
                            });
                        }
                    }).then(
                        function (result) {
                            RefreshTable(true, true, true);
                            //window.location.reload();
                        });
                }
                else {
                    swal('Deletion Failed', result.responseText, 'error');
                }


            },
            error: function (response) {
                swal('Stop', response.responseText, 'danger');
            }
        });

    }
</script>

<div class="modal fade" id="modal-deleteupfrontline" tabindex="-1" role="dialog" aria-labelledby="modal-deleteupfrontline" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document" style="min-width:80%;">
        <div class="modal-content">
            <div class="block block-themed block-transparent mb-0">
                <div class="block-header bg-primary-dark">
                    <h3 class="block-title">@Model.UpfrontInfo.Name</h3>
                    <div class="block-options">
                        <button type="button" class="btn-block-option" data-dismiss="modal" aria-label="Close">
                            <i class="si si-close"></i>
                        </button>
                    </div>
                </div>
                <div  class="block-content" >
                    <div class="form-group row">
                        <div class="col-md-12">
                            <p>Please note that the line you selected will be evaluated as a group.  Hence, if one or more of the properties in a group are found to be APPROVED or IN USE, none will deleted.</p>
                            <input type="hidden" class="form-control" id="txtUpfrontLineId" name="txtUpfrontLineId">
                        </div>
                    </div>
                    <div id="dTable" class="form-group row">
                        <div class="block-content block-content-full">
                            <!-- DataTables init on table by adding .js-dataTable-full class, functionality initialized in js/pages/be_tables_datatables.js -->
                                <table class="table table-bordered table-striped table-vcenter js-dataTable-simple" id="DeleteTable" name="DeleteTable">
                                    <thead>
                                        <tr>
                                            <th class="d-none d-sm-table-cell text-center">Demo Name</th>
                                            <th class="d-none d-sm-table-cell text-center">Property Name</th>
                                            <th class="d-none d-sm-table-cell text-center">Start</th>
                                            <th class="d-none d-sm-table-cell text-center">End</th>
                                            <th class="d-none d-sm-table-cell text-center">DP</th>
                                            <th class="d-none d-sm-table-cell text-center">BT</th>
                                            <th class="d-none d-sm-table-cell text-center">Split</th>
                                            <th class="d-none d-sm-table-cell text-center">Spot Len</th>
                                            <th class="d-none d-sm-table-cell text-center">Rate</th>
                                            <th class="d-none d-sm-table-cell text-center">Imp</th>
                                            <th class="d-none d-sm-table-cell text-center">Status</th>
                                            <th class="d-none d-sm-table-cell text-center">Okay to Delete?</th>
                                        </tr>
                                    </thead>
                                    <tbody id="DeleteList"></tbody>
                                </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-alt-secondary" data-dismiss="modal">Close</button>
                <button id="btnDeleteProperty" type="button" class="btn btn-alt-success" onclick="javascript: DeleteProperty($('#txtUpfrontLineId').val());">
                    Delete Properties Listed
                </button>
            </div>
        </div>
    </div>
</div>

