@model ViewUpfrontsViewModel

<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        var table = $('#NoteTable').DataTable({
            lengthMenu: [[5, 10, 15, 20], [5, 10, 15, 20]],
            autoWidth: false,
            columns: [
                {
                    targets: 0,
                    visible: true
                },
                {
                    targets: 1,
                    visible: true
                },
                {
                    targets: 2,
                    visible: true
                },
                {
                    targets: 3,
                    visible: true
                },
                {
                    targets: 4,
                    visible: false
                },
            ],
            createdRow: function (row, data, dataIndex) {
                console.log(row);
                console.log(data);
                console.log(dataIndex);
                $(row).find('td:eq(2)').attr('id', "rowNote-" + data[4]);
                
            }
        });

    });

    function SaveNote(curUpfrontId) {
        $.ajax({
            url: "/ManageMedia/AddNote",
            data: {
                Note: $("#txtNote").val(),
                UpfrontId: curUpfrontId
            },
            cache: false,
            type: "POST",
            success: function (result) {
                if (result.success == true) {
                    var res = result.responseText.split(";");
                    var table = $('#NoteTable').DataTable();
                    table.row.add([
                        res[0],
                        res[1],
                        res[2],
                        "<button type='button' class='btn btn-sm btn-alt-secondary' id='btnAdd-" + result.myUpfrontNoteId + "' name='btnAdd-" + result.myUpfrontNoteId + "' onclick='javascript: AddSubNote(this, " + result.myUpfrontNoteId + "); '>Add</button>",
                        result.myUpfrontNoteId
                    ]).draw(false);
                    $("#txtNote").val("");
                }
                else {
                    var notify = $.notify(result.responseText, {
                        type: 'danger',
                        allow_dismiss: true
                    });
                }

            },
            error: function (response) {
                var notify = $.notify(response.responseText, {
                    type: 'danger',
                    allow_dismiss: true
                });
            }

        });
    }


    function SaveSubNote(ParentNoteId, NoteText) {
        $.ajax({
            url: "/ManageMedia/AddSubNote",
            data: {
                UpfrontParentNoteId: ParentNoteId,
                Note: NoteText
            },
            cache: false,
            type: "POST",
            success: function (result) {
                if (result.success == true) {
                    $("#rowNote-" + ParentNoteId).append('<br/><i>' + result.createDt + ' ' + result.displayName + '<br/></i>' + result.newNote + '<br/>');

                    var notify = $.notify(result.responseText, {
                        type: 'success',
                        allow_dismiss: true
                    });
                }
                else {
                    var notify = $.notify(result.responseText, {
                        type: 'danger',
                        allow_dismiss: true
                    });
                }

            },
            error: function (response) {
                var notify = $.notify(response.responseText, {
                    type: 'danger',
                    allow_dismiss: true
                });
            }

        });
    }

    function ReloadNoteDataTable() {
        var date = new Date();
        var random = Math.floor(Math.random() * 1000) + 1 + date.getMilliseconds();
        $("#NoteDataTableDiv").load("/ManageMedia/ReloadNotesDataTable?upfrontid=" + getParameterByName('upfrontid') + "&r=" + random);
    }

    function AddSubNote(btn, UpfrontNoteId) {
        swal({
            html: 'Enter comment to note: <input id="txtSubNote" autofocus class="form-control swal2-input">',           
            preConfirm: function (selectedOption) {                
                return new Promise(function (resolve, reject) {                    
                    if ($('#txtSubNote').val()) {
                        resolve({ value: document.getElementById('txtSubNote').value });
                    }
                    else {
                        reject('Please enter comment to note.');
                    }
                });
            },
            onOpen: function () {
                $('#txtSubNote').focus();
            }
        }).then(function (result) {            
            SaveSubNote(UpfrontNoteId, result.value);
        }).catch(swal.noop)
    }
</script>

@{
    var AllowEdit = false;
    if (Model.ViewOnly == false)
    {
        AllowEdit = true;
    }

}

<div class="modal fade" id="modal-notes" role="dialog" aria-labelledby="modal-notes" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="block block-themed block-transparent mb-0">
                <div class="block-header bg-primary-dark">
                    <h3 class="block-title">@Model.UpfrontInfo.Name</h3>
                    <div class="block-options">
                        <button type="button" class="btn-block-option" data-dismiss="modal" aria-label="Close">
                            <i class="si si-close"></i>
                        </button>
                    </div>
                </div>
                <div class="block-content">
                    @if (AllowEdit == true && Model.UpfrontPermissions.First().CanUpfrontUpdateNotes == 1)
                    {
                        <div class="form-group row">
                            <label class="col-12" for="txtNetworkName">Add Note:</label>
                            <div class="col-md-12">
                                <input type="text" class="form-control" id="txtNote" name="txtNote">
                            </div>
                        </div>
                    }
                    <div class="form-group row" id="NoteDataTableDiv">
                        <div class="block-content block-content-full">
                            <!-- DataTables init on table by adding .js-dataTable-full class, functionality initialized in js/pages/be_tables_datatables.js -->
                            <table class="table table-bordered table-vcenter js-dataTable-simple" id="NoteTable" name="NoteTable">
                                <thead>
                                    <tr>
                                        <th class="d-none d-sm-table-cell" style="width:20%">Date</th>
                                        <th class="d-none d-sm-table-cell" style="width:15%">Creator</th>
                                        <th class="d-none d-sm-table-cell" style="width:60%">Note</th>
                                        <th class="d-none d-sm-table-cell"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var upfrontnote in Model.UpfrontNotes)
                                    {
                                        if (upfrontnote.ParentNoteId == null)
                                        {
                                            <tr>
                                                <td class="d-none d-sm-table-cell bg-secondary-light" id="rowDate-@upfrontnote.UpfrontNoteId">@upfrontnote.CreateDt</td>
                                                <td class="d-none d-sm-table-cell bg-secondary-light" id="rowName-@upfrontnote.UpfrontNoteId">@upfrontnote.CreatedBy.DisplayName</td>
                                                <td class="font-w600 bg-secondary-light" id="rowNote-@upfrontnote.UpfrontNoteId">@Html.Raw(upfrontnote.Note)</td>
                                                <td class="d-none d-sm-table-cell text-center bg-secondary-light">
                                                    @if (AllowEdit == true)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-alt-secondary" id="btnAdd-@upfrontnote.UpfrontNoteId" name="btnAdd-@upfrontnote.UpfrontNoteId" onclick="javascript: AddSubNote(this, @upfrontnote.UpfrontNoteId);">Add</button>
                                                    }
                                                </td>
                                                <td>@upfrontnote.UpfrontNoteId</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td class="d-none d-sm-table-cell" id="rowDate-@upfrontnote.UpfrontNoteId">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i>@upfrontnote.CreateDt</i></td>
                                                <td class="d-none d-sm-table-cell" id="rowName-@upfrontnote.UpfrontNoteId"><i>@upfrontnote.CreatedBy.DisplayName</i></td>
                                                <td class="font-w600" id="rowNote-@upfrontnote.UpfrontNoteId"><i>@upfrontnote.Note</i></td>
                                                <td class="d-none d-sm-table-cell text-center"></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-alt-secondary" data-dismiss="modal">Close</button>
                @if (AllowEdit == true && Model.UpfrontPermissions.First().CanUpfrontUpdateNotes == 1)
                {
                    <button type="button" class="btn btn-alt-success" onclick="javascript: SaveNote(@Model.UpfrontInfo.UpfrontId);">
                        <i class="fa fa-check"></i> Save
                    </button>
                }

            </div>
        </div>
    </div>
</div>


